If this file is too long for you, I got a shorter one: quick.start.README.for.hackers

System requirements
~~~~~~~~~~~~~~~~~~~

0. Obviously you need testing tool and testing set. ppcg source-to-source compiler found at 

http://repo.or.cz/w/ppcg.git

, polybench-c test suite from 

http://www.cse.ohio-state.edu/~pouchet/software/polybench

1. You should be able to create and run CUDA executables. NVIDIA toolkit should run via gcc (or at least gcc should be able to link object code created by nvcc compiler).

2. Python interpreter. An installed version you have, or a version you download today should be ok. If something fails, take 2.7.* (I'm using it now).

3. Your operating system (and you) should support forward slash //// in filenames. I am 99,99% sure about your OS, but not sure about you. Yes, trust me, your OS supports it. Don't ever put backslash \\\\ into filenames sent to my script.


Installation of ppcg, polybench-c
~~~~~~~~~~~~

1. Unpack polybench-c somewhere. Install ppcg executable and library.

Yes, it is open-source, read README, compile, put ppcg into /usr/bin and libraries... you know where. Don't need `pet' executable... I think. 

If you got portage installed, use my ebuild ppcg-20140207-r1.ebuild found at ebuild directory here. The ebuild should go to /your/private/overlay/sys-devel/ppcg.

As you noticed, polybench-c-3.2.ebuild is also here. It is of category app-benchmark and as you guessed polybench-c-3.2.ebuild should be in /your/private/overlay/app-benchmarks/polybench-c.

Note Gentoo portage is not a requirement of ppcg_polybench_test-benchmark, just a tool to compile and install ppcg right.

2. Compile cuda_cardz.c into executable

/opt/cuda/bin/nvcc cuda_cardz.c -o cuda_cardz ; strip cuda_cardz

No ebuild yet. Sorry. Will write it soon.

Put two executables into /usr/bin

cp cuda_cardz ppcg_polybench_benchmark.py /usr/bin

3. Ready to go. Go to sample sub-directory such as /sample/all.cards.MINI and run ./runme. Hey, wait. What's that

/usr/share/polybench-c-3./utilities/benchmark_list[Errno 2] No such file or directory: '/usr/share/polybench-c-3.2/utilities/benchmark_list'

Of course, your polybench is not there. Copy runme and change POLYBENCH=... fragment accordingly.

As you probably guessed ppcg_polybench_benchmark.py takes videocard information from std input and all other settings from environment vars. Save a millisecond of CPU time and define videocard yourself not using that big /usr/bin/cuda_cardz

echo 0 21,1 35|ppcg_polybench_benchmark.py

where 0/1 are numbers of your videocards and 2.1/3.5 are their compute capabilities.
